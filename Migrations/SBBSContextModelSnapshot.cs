// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using bbs.Models;

namespace bbs_project.Migrations
{
    [DbContext(typeof(SBBSContext))]
    partial class SBBSContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("bbs.Models.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionRol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreRol")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("bbs.Models.RolVista", b =>
                {
                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.Property<int>("VistaId")
                        .HasColumnType("int");

                    b.HasKey("RolId", "VistaId");

                    b.HasIndex("VistaId");

                    b.ToTable("RolVistas");
                });

            modelBuilder.Entity("bbs.Models.Value", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Values");
                });

            modelBuilder.Entity("bbs.Models.Vista", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NombreVista")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Vistas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NombreVista = "Reportes"
                        },
                        new
                        {
                            Id = 2,
                            NombreVista = "Graficos"
                        },
                        new
                        {
                            Id = 3,
                            NombreVista = "Administrar"
                        },
                        new
                        {
                            Id = 4,
                            NombreVista = "Mantenimiento"
                        });
                });

            modelBuilder.Entity("bbs.Models.RolVista", b =>
                {
                    b.HasOne("bbs.Models.Rol", "Rol")
                        .WithMany("RolVistas")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bbs.Models.Vista", "Vista")
                        .WithMany("RolVistas")
                        .HasForeignKey("VistaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
