// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using bbs.Models;

namespace bbs_project.Migrations
{
    [DbContext(typeof(SBBSContext))]
    partial class SBBSContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("bbs.Models.Actividad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(75)");

                    b.HasKey("Id");

                    b.ToTable("Actividades");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Rutinaria"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "No Rutinaria"
                        });
                });

            modelBuilder.Entity("bbs.Models.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(75)");

                    b.HasKey("Id");

                    b.ToTable("Areas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Andén de Carga"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Armado de cilindros"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Aséptico"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Banda Subterránea"
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "Banda de Pelado"
                        },
                        new
                        {
                            Id = 6,
                            Nombre = "Bodega PT"
                        },
                        new
                        {
                            Id = 7,
                            Nombre = "Bodega Técnica"
                        },
                        new
                        {
                            Id = 8,
                            Nombre = "Calderas"
                        },
                        new
                        {
                            Id = 9,
                            Nombre = "Camerinos"
                        },
                        new
                        {
                            Id = 10,
                            Nombre = "Centro de acopio"
                        },
                        new
                        {
                            Id = 11,
                            Nombre = "Comedor"
                        },
                        new
                        {
                            Id = 12,
                            Nombre = "Concentradores"
                        },
                        new
                        {
                            Id = 13,
                            Nombre = "Congelado"
                        },
                        new
                        {
                            Id = 14,
                            Nombre = "Cuarto de Esencia"
                        },
                        new
                        {
                            Id = 15,
                            Nombre = "Laboratorio Calidad Satélite"
                        },
                        new
                        {
                            Id = 16,
                            Nombre = "Laboratorio de Microbiología"
                        },
                        new
                        {
                            Id = 17,
                            Nombre = "Maduradora"
                        },
                        new
                        {
                            Id = 18,
                            Nombre = "Oficinas"
                        },
                        new
                        {
                            Id = 19,
                            Nombre = "Patio de Miniobras"
                        },
                        new
                        {
                            Id = 20,
                            Nombre = "Pilas"
                        },
                        new
                        {
                            Id = 21,
                            Nombre = "Presterilización"
                        },
                        new
                        {
                            Id = 22,
                            Nombre = "Puesto 1"
                        },
                        new
                        {
                            Id = 23,
                            Nombre = "Puesto 2"
                        },
                        new
                        {
                            Id = 24,
                            Nombre = "Refrigeración"
                        },
                        new
                        {
                            Id = 25,
                            Nombre = "Servicio médicos"
                        },
                        new
                        {
                            Id = 26,
                            Nombre = "Taller eléctrico"
                        },
                        new
                        {
                            Id = 27,
                            Nombre = "Taller mecánico"
                        },
                        new
                        {
                            Id = 28,
                            Nombre = "Talleres contratistas"
                        },
                        new
                        {
                            Id = 29,
                            Nombre = "Zonas Externas Varias"
                        },
                        new
                        {
                            Id = 30,
                            Nombre = "PTAR"
                        },
                        new
                        {
                            Id = 31,
                            Nombre = "Tanque de Gas LP"
                        },
                        new
                        {
                            Id = 32,
                            Nombre = "Drinks and Juices"
                        },
                        new
                        {
                            Id = 33,
                            Nombre = "Planta Piloto"
                        },
                        new
                        {
                            Id = 34,
                            Nombre = "Baader"
                        },
                        new
                        {
                            Id = 35,
                            Nombre = "Banda de Pelado"
                        },
                        new
                        {
                            Id = 36,
                            Nombre = "Bodega de Químicos"
                        },
                        new
                        {
                            Id = 37,
                            Nombre = "Aduana Principal"
                        },
                        new
                        {
                            Id = 39,
                            Nombre = "Fincas"
                        },
                        new
                        {
                            Id = 40,
                            Nombre = "Laboratorio de Calidad"
                        },
                        new
                        {
                            Id = 41,
                            Nombre = "Laboratorio GI"
                        },
                        new
                        {
                            Id = 42,
                            Nombre = "Mantenimiento"
                        },
                        new
                        {
                            Id = 43,
                            Nombre = "Presty"
                        },
                        new
                        {
                            Id = 44,
                            Nombre = "Edificio Finanzas"
                        },
                        new
                        {
                            Id = 45,
                            Nombre = "Entretecho Manufactura"
                        },
                        new
                        {
                            Id = 46,
                            Nombre = "Sala de Capacitación"
                        },
                        new
                        {
                            Id = 47,
                            Nombre = "Taller"
                        },
                        new
                        {
                            Id = 48,
                            Nombre = "Tanque de Búnker"
                        },
                        new
                        {
                            Id = 49,
                            Nombre = "Agrícola"
                        },
                        new
                        {
                            Id = 50,
                            Nombre = "Cámaras de refrigeración"
                        },
                        new
                        {
                            Id = 51,
                            Nombre = "Pilas de patio de maniobras"
                        });
                });

            modelBuilder.Entity("bbs.Models.Bbs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AreaId")
                        .HasColumnType("int");

                    b.Property<int>("ComportamientoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObservadorId")
                        .HasColumnType("int");

                    b.Property<int>("ProcesoId")
                        .HasColumnType("int");

                    b.Property<int>("TipoComportamientoId")
                        .HasColumnType("int");

                    b.Property<int>("TipoObservadoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("ComportamientoId");

                    b.HasIndex("ObservadorId");

                    b.HasIndex("ProcesoId");

                    b.HasIndex("TipoComportamientoId");

                    b.HasIndex("TipoObservadoId");

                    b.ToTable("Bbss");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AreaId = 35,
                            ComportamientoId = 5,
                            Fecha = new DateTime(2020, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ObservadorId = 11,
                            ProcesoId = 15,
                            TipoComportamientoId = 2,
                            TipoObservadoId = 1
                        },
                        new
                        {
                            Id = 2,
                            AreaId = 44,
                            ComportamientoId = 26,
                            Fecha = new DateTime(2020, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ObservadorId = 5,
                            ProcesoId = 13,
                            TipoComportamientoId = 2,
                            TipoObservadoId = 1
                        },
                        new
                        {
                            Id = 3,
                            AreaId = 3,
                            ComportamientoId = 6,
                            Fecha = new DateTime(2020, 1, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ObservadorId = 5,
                            ProcesoId = 10,
                            TipoComportamientoId = 2,
                            TipoObservadoId = 1
                        },
                        new
                        {
                            Id = 4,
                            AreaId = 37,
                            ComportamientoId = 24,
                            Fecha = new DateTime(2020, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ObservadorId = 2,
                            ProcesoId = 13,
                            TipoComportamientoId = 1,
                            TipoObservadoId = 2
                        },
                        new
                        {
                            Id = 5,
                            AreaId = 10,
                            ComportamientoId = 21,
                            Fecha = new DateTime(2020, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ObservadorId = 1,
                            ProcesoId = 21,
                            TipoComportamientoId = 2,
                            TipoObservadoId = 2
                        },
                        new
                        {
                            Id = 6,
                            AreaId = 44,
                            ComportamientoId = 29,
                            Fecha = new DateTime(2020, 2, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ObservadorId = 6,
                            ProcesoId = 2,
                            TipoComportamientoId = 2,
                            TipoObservadoId = 1
                        },
                        new
                        {
                            Id = 7,
                            AreaId = 22,
                            ComportamientoId = 25,
                            Fecha = new DateTime(2020, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ObservadorId = 3,
                            ProcesoId = 15,
                            TipoComportamientoId = 2,
                            TipoObservadoId = 2
                        },
                        new
                        {
                            Id = 8,
                            AreaId = 48,
                            ComportamientoId = 29,
                            Fecha = new DateTime(2020, 3, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ObservadorId = 7,
                            ProcesoId = 1,
                            TipoComportamientoId = 1,
                            TipoObservadoId = 1
                        },
                        new
                        {
                            Id = 9,
                            AreaId = 9,
                            ComportamientoId = 19,
                            Fecha = new DateTime(2020, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ObservadorId = 1,
                            ProcesoId = 18,
                            TipoComportamientoId = 2,
                            TipoObservadoId = 2
                        },
                        new
                        {
                            Id = 10,
                            AreaId = 26,
                            ComportamientoId = 11,
                            Fecha = new DateTime(2020, 3, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ObservadorId = 1,
                            ProcesoId = 12,
                            TipoComportamientoId = 1,
                            TipoObservadoId = 1
                        },
                        new
                        {
                            Id = 11,
                            AreaId = 13,
                            ComportamientoId = 17,
                            Fecha = new DateTime(2020, 4, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ObservadorId = 9,
                            ProcesoId = 9,
                            TipoComportamientoId = 2,
                            TipoObservadoId = 1
                        },
                        new
                        {
                            Id = 12,
                            AreaId = 32,
                            ComportamientoId = 1,
                            Fecha = new DateTime(2020, 4, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ObservadorId = 10,
                            ProcesoId = 21,
                            TipoComportamientoId = 1,
                            TipoObservadoId = 1
                        },
                        new
                        {
                            Id = 13,
                            AreaId = 22,
                            ComportamientoId = 27,
                            Fecha = new DateTime(2020, 4, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ObservadorId = 5,
                            ProcesoId = 22,
                            TipoComportamientoId = 2,
                            TipoObservadoId = 2
                        },
                        new
                        {
                            Id = 14,
                            AreaId = 36,
                            ComportamientoId = 9,
                            Fecha = new DateTime(2020, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ObservadorId = 4,
                            ProcesoId = 9,
                            TipoComportamientoId = 1,
                            TipoObservadoId = 1
                        },
                        new
                        {
                            Id = 15,
                            AreaId = 13,
                            ComportamientoId = 26,
                            Fecha = new DateTime(2020, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ObservadorId = 11,
                            ProcesoId = 22,
                            TipoComportamientoId = 1,
                            TipoObservadoId = 4
                        },
                        new
                        {
                            Id = 16,
                            AreaId = 29,
                            ComportamientoId = 22,
                            Fecha = new DateTime(2020, 5, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ObservadorId = 10,
                            ProcesoId = 23,
                            TipoComportamientoId = 2,
                            TipoObservadoId = 1
                        },
                        new
                        {
                            Id = 17,
                            AreaId = 19,
                            ComportamientoId = 18,
                            Fecha = new DateTime(2020, 5, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ObservadorId = 2,
                            ProcesoId = 2,
                            TipoComportamientoId = 1,
                            TipoObservadoId = 3
                        },
                        new
                        {
                            Id = 18,
                            AreaId = 46,
                            ComportamientoId = 28,
                            Fecha = new DateTime(2020, 5, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ObservadorId = 2,
                            ProcesoId = 7,
                            TipoComportamientoId = 2,
                            TipoObservadoId = 5
                        },
                        new
                        {
                            Id = 19,
                            AreaId = 25,
                            ComportamientoId = 11,
                            Fecha = new DateTime(2020, 5, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ObservadorId = 5,
                            ProcesoId = 6,
                            TipoComportamientoId = 1,
                            TipoObservadoId = 1
                        },
                        new
                        {
                            Id = 20,
                            AreaId = 16,
                            ComportamientoId = 9,
                            Fecha = new DateTime(2020, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ObservadorId = 6,
                            ProcesoId = 18,
                            TipoComportamientoId = 2,
                            TipoObservadoId = 1
                        },
                        new
                        {
                            Id = 21,
                            AreaId = 35,
                            ComportamientoId = 7,
                            Fecha = new DateTime(2020, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ObservadorId = 6,
                            ProcesoId = 8,
                            TipoComportamientoId = 1,
                            TipoObservadoId = 2
                        },
                        new
                        {
                            Id = 22,
                            AreaId = 46,
                            ComportamientoId = 27,
                            Fecha = new DateTime(2020, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ObservadorId = 4,
                            ProcesoId = 5,
                            TipoComportamientoId = 1,
                            TipoObservadoId = 2
                        },
                        new
                        {
                            Id = 23,
                            AreaId = 1,
                            ComportamientoId = 3,
                            Fecha = new DateTime(2020, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ObservadorId = 9,
                            ProcesoId = 5,
                            TipoComportamientoId = 2,
                            TipoObservadoId = 2
                        },
                        new
                        {
                            Id = 24,
                            AreaId = 44,
                            ComportamientoId = 26,
                            Fecha = new DateTime(2020, 7, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ObservadorId = 7,
                            ProcesoId = 17,
                            TipoComportamientoId = 2,
                            TipoObservadoId = 1
                        },
                        new
                        {
                            Id = 25,
                            AreaId = 6,
                            ComportamientoId = 9,
                            Fecha = new DateTime(2020, 7, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ObservadorId = 8,
                            ProcesoId = 19,
                            TipoComportamientoId = 1,
                            TipoObservadoId = 1
                        },
                        new
                        {
                            Id = 26,
                            AreaId = 49,
                            ComportamientoId = 21,
                            Fecha = new DateTime(2020, 7, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ObservadorId = 8,
                            ProcesoId = 3,
                            TipoComportamientoId = 2,
                            TipoObservadoId = 1
                        },
                        new
                        {
                            Id = 27,
                            AreaId = 37,
                            ComportamientoId = 29,
                            Fecha = new DateTime(2020, 7, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ObservadorId = 1,
                            ProcesoId = 1,
                            TipoComportamientoId = 2,
                            TipoObservadoId = 5
                        },
                        new
                        {
                            Id = 28,
                            AreaId = 22,
                            ComportamientoId = 4,
                            Fecha = new DateTime(2020, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ObservadorId = 8,
                            ProcesoId = 4,
                            TipoComportamientoId = 2,
                            TipoObservadoId = 1
                        },
                        new
                        {
                            Id = 29,
                            AreaId = 2,
                            ComportamientoId = 2,
                            Fecha = new DateTime(2020, 7, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ObservadorId = 1,
                            ProcesoId = 21,
                            TipoComportamientoId = 2,
                            TipoObservadoId = 3
                        },
                        new
                        {
                            Id = 30,
                            AreaId = 9,
                            ComportamientoId = 21,
                            Fecha = new DateTime(2020, 7, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ObservadorId = 9,
                            ProcesoId = 23,
                            TipoComportamientoId = 1,
                            TipoObservadoId = 1
                        });
                });

            modelBuilder.Entity("bbs.Models.Bitacora", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionBitacora")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Bitacora");
                });

            modelBuilder.Entity("bbs.Models.CasiIncidente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AreaId")
                        .HasColumnType("int");

                    b.Property<int>("CasualidadId")
                        .HasColumnType("int");

                    b.Property<int?>("ColaboradorId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("GeneroId")
                        .HasColumnType("int");

                    b.Property<int>("JornadaId")
                        .HasColumnType("int");

                    b.Property<string>("Observado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProcesoId")
                        .HasColumnType("int");

                    b.Property<int>("RiesgoId")
                        .HasColumnType("int");

                    b.Property<int>("TurnoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("CasualidadId");

                    b.HasIndex("ColaboradorId");

                    b.HasIndex("GeneroId");

                    b.HasIndex("JornadaId");

                    b.HasIndex("ProcesoId");

                    b.HasIndex("RiesgoId");

                    b.HasIndex("TurnoId");

                    b.ToTable("CasiIncidentes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AreaId = 3,
                            CasualidadId = 2,
                            Descripcion = "Incumplimiento de la distancia de carga pesada",
                            Fecha = new DateTime(2020, 2, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroId = 2,
                            JornadaId = 3,
                            Observado = "Alejandro Venegas",
                            ProcesoId = 1,
                            RiesgoId = 2,
                            TurnoId = 2
                        },
                        new
                        {
                            Id = 2,
                            AreaId = 5,
                            CasualidadId = 6,
                            Descripcion = "Posturas y manejo de cargas inadecuadas",
                            Fecha = new DateTime(2020, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroId = 1,
                            JornadaId = 2,
                            Observado = "Alejandro Venegas",
                            ProcesoId = 1,
                            RiesgoId = 2,
                            TurnoId = 3
                        },
                        new
                        {
                            Id = 3,
                            AreaId = 35,
                            CasualidadId = 3,
                            Descripcion = "No apto para la zona qu�mica",
                            Fecha = new DateTime(2020, 5, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroId = 2,
                            JornadaId = 1,
                            Observado = "Alejandro Venegas",
                            ProcesoId = 2,
                            RiesgoId = 1,
                            TurnoId = 3
                        },
                        new
                        {
                            Id = 4,
                            AreaId = 7,
                            CasualidadId = 7,
                            Descripcion = "Temblor sin afectaci�n",
                            Fecha = new DateTime(2020, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroId = 1,
                            JornadaId = 2,
                            Observado = "Alejandro Venegas",
                            ProcesoId = 1,
                            RiesgoId = 3,
                            TurnoId = 2
                        },
                        new
                        {
                            Id = 5,
                            AreaId = 50,
                            CasualidadId = 5,
                            Descripcion = "Sin protecci�n",
                            Fecha = new DateTime(2020, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroId = 2,
                            JornadaId = 1,
                            Observado = "Alejandro Venegas",
                            ProcesoId = 2,
                            RiesgoId = 2,
                            TurnoId = 2
                        },
                        new
                        {
                            Id = 6,
                            AreaId = 34,
                            CasualidadId = 4,
                            Descripcion = "Mala praxis",
                            Fecha = new DateTime(2020, 5, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroId = 2,
                            JornadaId = 3,
                            Observado = "Alejandro Venegas",
                            ProcesoId = 2,
                            RiesgoId = 2,
                            TurnoId = 5
                        },
                        new
                        {
                            Id = 7,
                            AreaId = 6,
                            CasualidadId = 2,
                            Descripcion = "Expuesto a zonas inseguras",
                            Fecha = new DateTime(2020, 7, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroId = 2,
                            JornadaId = 2,
                            Observado = "Alejandro Venegas",
                            ProcesoId = 1,
                            RiesgoId = 1,
                            TurnoId = 4
                        },
                        new
                        {
                            Id = 8,
                            AreaId = 19,
                            CasualidadId = 5,
                            Descripcion = "Sin protecci�n",
                            Fecha = new DateTime(2020, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroId = 1,
                            JornadaId = 1,
                            Observado = "Alejandro Venegas",
                            ProcesoId = 2,
                            RiesgoId = 2,
                            TurnoId = 3
                        },
                        new
                        {
                            Id = 9,
                            AreaId = 25,
                            CasualidadId = 7,
                            Descripcion = "Temblor sin afectaci�n",
                            Fecha = new DateTime(2020, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroId = 1,
                            JornadaId = 2,
                            Observado = "Alejandro Venegas",
                            ProcesoId = 1,
                            RiesgoId = 2,
                            TurnoId = 1
                        },
                        new
                        {
                            Id = 10,
                            AreaId = 40,
                            CasualidadId = 5,
                            Descripcion = "Sin protecci�n",
                            Fecha = new DateTime(2020, 4, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroId = 2,
                            JornadaId = 3,
                            Observado = "Alejandro Venegas",
                            ProcesoId = 2,
                            RiesgoId = 2,
                            TurnoId = 5
                        },
                        new
                        {
                            Id = 11,
                            AreaId = 2,
                            CasualidadId = 3,
                            Descripcion = "No apto para la zona qu�mica",
                            Fecha = new DateTime(2020, 7, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroId = 1,
                            JornadaId = 2,
                            Observado = "Alejandro Venegas",
                            ProcesoId = 1,
                            RiesgoId = 3,
                            TurnoId = 4
                        },
                        new
                        {
                            Id = 12,
                            AreaId = 1,
                            CasualidadId = 1,
                            Descripcion = "Acci�n sin preveer consecuencias",
                            Fecha = new DateTime(2020, 5, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroId = 2,
                            JornadaId = 3,
                            Observado = "Alejandro Venegas",
                            ProcesoId = 2,
                            RiesgoId = 1,
                            TurnoId = 2
                        },
                        new
                        {
                            Id = 13,
                            AreaId = 15,
                            CasualidadId = 6,
                            Descripcion = "Posturas y manejo de cargas inadecuadas",
                            Fecha = new DateTime(2020, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroId = 2,
                            JornadaId = 2,
                            Observado = "Alejandro Venegas",
                            ProcesoId = 1,
                            RiesgoId = 2,
                            TurnoId = 3
                        },
                        new
                        {
                            Id = 14,
                            AreaId = 28,
                            CasualidadId = 4,
                            Descripcion = "Mala praxis",
                            Fecha = new DateTime(2020, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroId = 1,
                            JornadaId = 2,
                            Observado = "Alejandro Venegas",
                            ProcesoId = 2,
                            RiesgoId = 2,
                            TurnoId = 5
                        },
                        new
                        {
                            Id = 15,
                            AreaId = 12,
                            CasualidadId = 6,
                            Descripcion = "Posturas y manejo de cargas inadecuadas",
                            Fecha = new DateTime(2020, 6, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroId = 1,
                            JornadaId = 1,
                            Observado = "Alejandro Venegas",
                            ProcesoId = 1,
                            RiesgoId = 1,
                            TurnoId = 3
                        },
                        new
                        {
                            Id = 16,
                            AreaId = 4,
                            CasualidadId = 3,
                            Descripcion = "No apto para la zona qu�mica",
                            Fecha = new DateTime(2020, 2, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroId = 2,
                            JornadaId = 2,
                            Observado = "Alejandro Venegas",
                            ProcesoId = 2,
                            RiesgoId = 1,
                            TurnoId = 2
                        },
                        new
                        {
                            Id = 17,
                            AreaId = 44,
                            CasualidadId = 5,
                            Descripcion = "Sin protecci�n",
                            Fecha = new DateTime(2020, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroId = 1,
                            JornadaId = 3,
                            Observado = "Alejandro Venegas",
                            ProcesoId = 1,
                            RiesgoId = 1,
                            TurnoId = 4
                        },
                        new
                        {
                            Id = 18,
                            AreaId = 39,
                            CasualidadId = 2,
                            Descripcion = "Expuesto a zonas inseguras",
                            Fecha = new DateTime(2020, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroId = 1,
                            JornadaId = 2,
                            Observado = "Alejandro Venegas",
                            ProcesoId = 2,
                            RiesgoId = 2,
                            TurnoId = 5
                        },
                        new
                        {
                            Id = 19,
                            AreaId = 23,
                            CasualidadId = 2,
                            Descripcion = "Expuesto a zonas inseguras",
                            Fecha = new DateTime(2020, 7, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroId = 1,
                            JornadaId = 3,
                            Observado = "Alejandro Venegas",
                            ProcesoId = 1,
                            RiesgoId = 1,
                            TurnoId = 1
                        },
                        new
                        {
                            Id = 20,
                            AreaId = 46,
                            CasualidadId = 3,
                            Descripcion = "No apto para la zona qu�mica",
                            Fecha = new DateTime(2020, 7, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroId = 1,
                            JornadaId = 1,
                            Observado = "Alejandro Venegas",
                            ProcesoId = 2,
                            RiesgoId = 2,
                            TurnoId = 3
                        },
                        new
                        {
                            Id = 21,
                            AreaId = 9,
                            CasualidadId = 3,
                            Descripcion = "No apto para la zona qu�mica",
                            Fecha = new DateTime(2020, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroId = 2,
                            JornadaId = 2,
                            Observado = "Alejandro Venegas",
                            ProcesoId = 2,
                            RiesgoId = 3,
                            TurnoId = 2
                        },
                        new
                        {
                            Id = 22,
                            AreaId = 10,
                            CasualidadId = 5,
                            Descripcion = "Sin protecci�n",
                            Fecha = new DateTime(2020, 3, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroId = 2,
                            JornadaId = 2,
                            Observado = "Alejandro Venegas",
                            ProcesoId = 1,
                            RiesgoId = 1,
                            TurnoId = 3
                        },
                        new
                        {
                            Id = 23,
                            AreaId = 43,
                            CasualidadId = 7,
                            Descripcion = "Temblor sin afectaci�n",
                            Fecha = new DateTime(2020, 2, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroId = 1,
                            JornadaId = 3,
                            Observado = "Alejandro Venegas",
                            ProcesoId = 1,
                            RiesgoId = 2,
                            TurnoId = 2
                        },
                        new
                        {
                            Id = 24,
                            AreaId = 50,
                            CasualidadId = 4,
                            Descripcion = "Mala praxis",
                            Fecha = new DateTime(2020, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroId = 1,
                            JornadaId = 2,
                            Observado = "Alejandro Venegas",
                            ProcesoId = 2,
                            RiesgoId = 2,
                            TurnoId = 3
                        },
                        new
                        {
                            Id = 25,
                            AreaId = 34,
                            CasualidadId = 4,
                            Descripcion = "Mala praxis",
                            Fecha = new DateTime(2020, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroId = 1,
                            JornadaId = 1,
                            Observado = "Alejandro Venegas",
                            ProcesoId = 2,
                            RiesgoId = 3,
                            TurnoId = 1
                        },
                        new
                        {
                            Id = 26,
                            AreaId = 21,
                            CasualidadId = 6,
                            Descripcion = "Posturas y manejo de cargas inadecuadas",
                            Fecha = new DateTime(2020, 5, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroId = 2,
                            JornadaId = 3,
                            Observado = "Alejandro Venegas",
                            ProcesoId = 1,
                            RiesgoId = 1,
                            TurnoId = 4
                        },
                        new
                        {
                            Id = 27,
                            AreaId = 32,
                            CasualidadId = 1,
                            Descripcion = "Acci�n sin preveer consecuencias",
                            Fecha = new DateTime(2020, 6, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroId = 2,
                            JornadaId = 2,
                            Observado = "Alejandro Venegas",
                            ProcesoId = 2,
                            RiesgoId = 2,
                            TurnoId = 2
                        },
                        new
                        {
                            Id = 28,
                            AreaId = 16,
                            CasualidadId = 3,
                            Descripcion = "No apto para la zona qu�mica",
                            Fecha = new DateTime(2020, 5, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroId = 1,
                            JornadaId = 1,
                            Observado = "Alejandro Venegas",
                            ProcesoId = 1,
                            RiesgoId = 2,
                            TurnoId = 1
                        },
                        new
                        {
                            Id = 29,
                            AreaId = 24,
                            CasualidadId = 4,
                            Descripcion = "Mala praxis",
                            Fecha = new DateTime(2020, 2, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroId = 2,
                            JornadaId = 3,
                            Observado = "Alejandro Venegas",
                            ProcesoId = 2,
                            RiesgoId = 1,
                            TurnoId = 4
                        },
                        new
                        {
                            Id = 30,
                            AreaId = 48,
                            CasualidadId = 5,
                            Descripcion = "Sin protecci�n",
                            Fecha = new DateTime(2020, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroId = 2,
                            JornadaId = 2,
                            Observado = "Alejandro Venegas",
                            ProcesoId = 1,
                            RiesgoId = 2,
                            TurnoId = 4
                        });
                });

            modelBuilder.Entity("bbs.Models.Casualidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(75)");

                    b.HasKey("Id");

                    b.ToTable("Casualidades");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Acto Inseguro"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Condición Insegura"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Manipulación de sustancias químicas"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "No seguimiento de procedimientos"
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "No uso de EPP"
                        },
                        new
                        {
                            Id = 6,
                            Nombre = "Posturas y manejo de cargas inadecuadas"
                        },
                        new
                        {
                            Id = 7,
                            Nombre = "Incidente Ambiental"
                        });
                });

            modelBuilder.Entity("bbs.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(75)");

                    b.HasKey("Id");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Agentes fisicos"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Almacenamiento - disposicion de materiales"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Equipos de emergencia"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Equipos de protección personal"
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "Ergonomía"
                        },
                        new
                        {
                            Id = 6,
                            Nombre = "Herramientas eléctricas"
                        },
                        new
                        {
                            Id = 7,
                            Nombre = "Herramientas manuales"
                        },
                        new
                        {
                            Id = 8,
                            Nombre = "Infraestructura"
                        },
                        new
                        {
                            Id = 9,
                            Nombre = "Orden y limpieza"
                        },
                        new
                        {
                            Id = 10,
                            Nombre = "Productos químicos"
                        },
                        new
                        {
                            Id = 11,
                            Nombre = "Protecciones y resguardos de maquinaria"
                        },
                        new
                        {
                            Id = 12,
                            Nombre = "Rotulación y señalizaciónn"
                        });
                });

            modelBuilder.Entity("bbs.Models.CausaBasica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(75)");

                    b.HasKey("Id");

                    b.ToTable("CausaBasicas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Acto Inseguro"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Condición Insegura"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Práctica ambiental subestándar"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Condición ambiental subestándar"
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "Condición Insegura/ambiental subestándar"
                        });
                });

            modelBuilder.Entity("bbs.Models.CausaInmediata", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(75)");

                    b.HasKey("Id");

                    b.ToTable("CausaInmediatas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Incumplimiento de procedimientos"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "No uso de EPP"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Uso inadecuado de sustancias químicas"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Posturas y manejo de cargas inadecuadas"
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "Herramientas/Equipo en mal estado"
                        },
                        new
                        {
                            Id = 6,
                            Nombre = "Nivel de ruido ambiental"
                        },
                        new
                        {
                            Id = 7,
                            Nombre = "Atmósfera inflamable o explosiva"
                        },
                        new
                        {
                            Id = 8,
                            Nombre = "Deficiencia o ausencia de señalización"
                        },
                        new
                        {
                            Id = 9,
                            Nombre = "Deficiencia o ausencia de EPP"
                        },
                        new
                        {
                            Id = 10,
                            Nombre = "Deficiencia o ausencia de elementos de protección de (falta)"
                        },
                        new
                        {
                            Id = 11,
                            Nombre = "Inherentes a materias primas o sustancia"
                        },
                        new
                        {
                            Id = 12,
                            Nombre = "Inconfort térmico"
                        },
                        new
                        {
                            Id = 13,
                            Nombre = "Insuficiente nivel de iluminación"
                        },
                        new
                        {
                            Id = 14,
                            Nombre = "Agentes biólogicos"
                        },
                        new
                        {
                            Id = 15,
                            Nombre = "Factores humanos"
                        },
                        new
                        {
                            Id = 16,
                            Nombre = "Deficiencia o ausencia de mantenimiento de equipos/máquinas (falta)"
                        },
                        new
                        {
                            Id = 17,
                            Nombre = "Insuficiente sectorización de áreas de riesgo"
                        },
                        new
                        {
                            Id = 18,
                            Nombre = "Contacto con sustancias químicas"
                        },
                        new
                        {
                            Id = 19,
                            Nombre = "Consumo irracional de agua"
                        },
                        new
                        {
                            Id = 20,
                            Nombre = "Consumo irracional de energía"
                        },
                        new
                        {
                            Id = 21,
                            Nombre = "Incorrecta separación de desechos"
                        },
                        new
                        {
                            Id = 22,
                            Nombre = "Incorrecto manejo de desechos peligrosos"
                        });
                });

            modelBuilder.Entity("bbs.Models.Clasificacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(75)");

                    b.HasKey("Id");

                    b.ToTable("Clasificaciones");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Lesión Menor"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Primeros Auxilios"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Registrable con Restricción"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Lesión con Pérdida de Tiempo"
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "Tratamiento Médico"
                        },
                        new
                        {
                            Id = 6,
                            Nombre = "Fatalidad"
                        },
                        new
                        {
                            Id = 7,
                            Nombre = "Enfermedad con restricción"
                        },
                        new
                        {
                            Id = 8,
                            Nombre = "Enfermedad con días pérdidos"
                        },
                        new
                        {
                            Id = 9,
                            Nombre = "Enfermedad lesión menor"
                        },
                        new
                        {
                            Id = 10,
                            Nombre = "Incidente Ambiental"
                        },
                        new
                        {
                            Id = 11,
                            Nombre = "Lesión Irreversible"
                        });
                });

            modelBuilder.Entity("bbs.Models.Colaborador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("DepartamentoId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Puesto")
                        .IsRequired()
                        .HasColumnType("varchar(35)");

                    b.HasKey("Id");

                    b.HasIndex("DepartamentoId");

                    b.ToTable("Colaboradores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Apellido = "Céspedes",
                            DepartamentoId = 1,
                            Nombre = "Alberto",
                            Puesto = "Por Definir"
                        },
                        new
                        {
                            Id = 2,
                            Apellido = "Blanco",
                            DepartamentoId = 1,
                            Nombre = "Alejandro",
                            Puesto = "Por Definir"
                        },
                        new
                        {
                            Id = 3,
                            Apellido = "Montero",
                            DepartamentoId = 1,
                            Nombre = "Alejandro",
                            Puesto = "Por Definir"
                        },
                        new
                        {
                            Id = 4,
                            Apellido = "Calderón",
                            DepartamentoId = 1,
                            Nombre = "Carla",
                            Puesto = "Por Definir"
                        },
                        new
                        {
                            Id = 5,
                            Apellido = "Brenes",
                            DepartamentoId = 1,
                            Nombre = "Carlos",
                            Puesto = "Por Definir"
                        },
                        new
                        {
                            Id = 6,
                            Apellido = "Durán",
                            DepartamentoId = 1,
                            Nombre = "Carlos",
                            Puesto = "Por Definir"
                        },
                        new
                        {
                            Id = 7,
                            Apellido = "Astua",
                            DepartamentoId = 1,
                            Nombre = "Cristina",
                            Puesto = "Por Definir"
                        },
                        new
                        {
                            Id = 8,
                            Apellido = "Acuña",
                            DepartamentoId = 1,
                            Nombre = "Dennis",
                            Puesto = "Por Definir"
                        },
                        new
                        {
                            Id = 9,
                            Apellido = "Chaves",
                            DepartamentoId = 1,
                            Nombre = "Diana",
                            Puesto = "Por Definir"
                        },
                        new
                        {
                            Id = 10,
                            Apellido = "Sánchez",
                            DepartamentoId = 1,
                            Nombre = "Ercik",
                            Puesto = "Por Definir"
                        },
                        new
                        {
                            Id = 11,
                            Apellido = "Gould",
                            DepartamentoId = 1,
                            Nombre = "Esteban",
                            Puesto = "Por Definir"
                        },
                        new
                        {
                            Id = 12,
                            Apellido = "Ramírez",
                            DepartamentoId = 1,
                            Nombre = "Fernando",
                            Puesto = "Por Definir"
                        },
                        new
                        {
                            Id = 13,
                            Apellido = "Rivera",
                            DepartamentoId = 1,
                            Nombre = "Fernando",
                            Puesto = "Por Definir"
                        },
                        new
                        {
                            Id = 14,
                            Apellido = "Hernández",
                            DepartamentoId = 1,
                            Nombre = "Hector",
                            Puesto = "Por Definir"
                        },
                        new
                        {
                            Id = 15,
                            Apellido = "Durán",
                            DepartamentoId = 1,
                            Nombre = "Jimmy",
                            Puesto = "Por Definir"
                        },
                        new
                        {
                            Id = 16,
                            Apellido = "Jiménez",
                            DepartamentoId = 1,
                            Nombre = "Jorge",
                            Puesto = "Por Definir"
                        },
                        new
                        {
                            Id = 17,
                            Apellido = "Solano",
                            DepartamentoId = 1,
                            Nombre = "Jorge",
                            Puesto = "Por Definir"
                        },
                        new
                        {
                            Id = 18,
                            Apellido = "Robles",
                            DepartamentoId = 1,
                            Nombre = "Juan",
                            Puesto = "Por Definir"
                        },
                        new
                        {
                            Id = 19,
                            Apellido = "Rodríguez",
                            DepartamentoId = 1,
                            Nombre = "Kenneth",
                            Puesto = "Por Definir"
                        },
                        new
                        {
                            Id = 20,
                            Apellido = "Aguilar",
                            DepartamentoId = 1,
                            Nombre = "M",
                            Puesto = "Por Definir"
                        },
                        new
                        {
                            Id = 21,
                            Apellido = "Arias",
                            DepartamentoId = 1,
                            Nombre = "Marco",
                            Puesto = "Por Definir"
                        },
                        new
                        {
                            Id = 22,
                            Apellido = "Vega",
                            DepartamentoId = 1,
                            Nombre = "Marco",
                            Puesto = "Por Definir"
                        },
                        new
                        {
                            Id = 23,
                            Apellido = "Jiménez",
                            DepartamentoId = 1,
                            Nombre = "Max",
                            Puesto = "Por Definir"
                        },
                        new
                        {
                            Id = 24,
                            Apellido = "Calderón",
                            DepartamentoId = 1,
                            Nombre = "Randall",
                            Puesto = "Por Definir"
                        },
                        new
                        {
                            Id = 25,
                            Apellido = "Guerrero",
                            DepartamentoId = 1,
                            Nombre = "Ronald",
                            Puesto = "Por Definir"
                        },
                        new
                        {
                            Id = 26,
                            Apellido = "Leiva",
                            DepartamentoId = 1,
                            Nombre = "Tannia",
                            Puesto = "Por Definir"
                        },
                        new
                        {
                            Id = 27,
                            Apellido = "Sequeira",
                            DepartamentoId = 1,
                            Nombre = "Walter",
                            Puesto = "Por Definir"
                        },
                        new
                        {
                            Id = 28,
                            Apellido = "Alvarado",
                            DepartamentoId = 1,
                            Nombre = "Nitzi",
                            Puesto = "Por Definir"
                        },
                        new
                        {
                            Id = 29,
                            Apellido = "Koying",
                            DepartamentoId = 1,
                            Nombre = "Carlos",
                            Puesto = "Por Definir"
                        });
                });

            modelBuilder.Entity("bbs.Models.Comportamiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(75)");

                    b.HasKey("Id");

                    b.ToTable("Comportamientos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Uso del celular"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Uso de pasamanos"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Uso de EPP "
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Manejo defensivo vehicular"
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "Respeto de la velocidad máxima"
                        },
                        new
                        {
                            Id = 6,
                            Nombre = "Uso racional del agua"
                        },
                        new
                        {
                            Id = 7,
                            Nombre = "Uso racional de energía"
                        },
                        new
                        {
                            Id = 8,
                            Nombre = "Separación de desechos"
                        },
                        new
                        {
                            Id = 9,
                            Nombre = "Uso de químicos"
                        },
                        new
                        {
                            Id = 10,
                            Nombre = "Uso de montacargas"
                        },
                        new
                        {
                            Id = 11,
                            Nombre = "Uso de hidrolavadora"
                        },
                        new
                        {
                            Id = 12,
                            Nombre = "Trabajos de alturas"
                        },
                        new
                        {
                            Id = 13,
                            Nombre = "Trabajos en calientes"
                        },
                        new
                        {
                            Id = 14,
                            Nombre = "Trabajos en espacios confinados (pd)"
                        },
                        new
                        {
                            Id = 15,
                            Nombre = "Trabajos en energías peligrosas"
                        },
                        new
                        {
                            Id = 16,
                            Nombre = "Levantamiento de cargas"
                        },
                        new
                        {
                            Id = 17,
                            Nombre = "Posturas incómodas"
                        },
                        new
                        {
                            Id = 18,
                            Nombre = "Pausas activas"
                        },
                        new
                        {
                            Id = 19,
                            Nombre = "Caminar, saltar, correr"
                        },
                        new
                        {
                            Id = 20,
                            Nombre = "Respeto de las señalizaciones"
                        },
                        new
                        {
                            Id = 21,
                            Nombre = "Uso de herramientas manuales"
                        },
                        new
                        {
                            Id = 22,
                            Nombre = "Uso de herramientas eléctricas"
                        },
                        new
                        {
                            Id = 23,
                            Nombre = "Uso de herramientas mecánicas"
                        },
                        new
                        {
                            Id = 24,
                            Nombre = "Orden y limpieza"
                        },
                        new
                        {
                            Id = 25,
                            Nombre = "Uso de escaleras"
                        },
                        new
                        {
                            Id = 26,
                            Nombre = "Obstrucción de pasillos"
                        },
                        new
                        {
                            Id = 27,
                            Nombre = "Aplicación de regla de 3 metros"
                        },
                        new
                        {
                            Id = 28,
                            Nombre = "Código de vestimenta"
                        },
                        new
                        {
                            Id = 29,
                            Nombre = "Sobre esfuerzos físicos"
                        });
                });

            modelBuilder.Entity("bbs.Models.CondicionInsegura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AreaId")
                        .HasColumnType("int");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<int?>("ColaboradorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("SubcategoriaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("ColaboradorId");

                    b.HasIndex("SubcategoriaId");

                    b.ToTable("CondicionInseguras");
                });

            modelBuilder.Entity("bbs.Models.Departamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("GerenteId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(75)");

                    b.HasKey("Id");

                    b.HasIndex("GerenteId");

                    b.ToTable("Departamentos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Por Definir"
                        });
                });

            modelBuilder.Entity("bbs.Models.Efecto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(75)");

                    b.HasKey("Id");

                    b.ToTable("Efectos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Seguridad"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Ambiente"
                        });
                });

            modelBuilder.Entity("bbs.Models.FactorRiesgo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(75)");

                    b.HasKey("Id");

                    b.ToTable("FactorRiesgos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Físicos"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Químicos"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Biológicos"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Ergonómicos"
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "Mecánicos"
                        },
                        new
                        {
                            Id = 6,
                            Nombre = "Infraestructura y Entorno"
                        });
                });

            modelBuilder.Entity("bbs.Models.Genero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(75)");

                    b.HasKey("Id");

                    b.ToTable("Generos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Masculino"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Femenino"
                        });
                });

            modelBuilder.Entity("bbs.Models.Incidente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActividadId")
                        .HasColumnType("int");

                    b.Property<int>("AreaId")
                        .HasColumnType("int");

                    b.Property<int>("CausaBasicaId")
                        .HasColumnType("int");

                    b.Property<int>("CausaInmediataId")
                        .HasColumnType("int");

                    b.Property<int>("ClasificacionId")
                        .HasColumnType("int");

                    b.Property<int?>("ColaboradorId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("EfectoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("GeneroId")
                        .HasColumnType("int");

                    b.Property<int>("JornadaId")
                        .HasColumnType("int");

                    b.Property<string>("Observado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParteCuerpoId")
                        .HasColumnType("int");

                    b.Property<int>("ProcesoId")
                        .HasColumnType("int");

                    b.Property<int>("RiesgoId")
                        .HasColumnType("int");

                    b.Property<int>("TurnoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActividadId");

                    b.HasIndex("AreaId");

                    b.HasIndex("CausaBasicaId");

                    b.HasIndex("CausaInmediataId");

                    b.HasIndex("ClasificacionId");

                    b.HasIndex("ColaboradorId");

                    b.HasIndex("EfectoId");

                    b.HasIndex("GeneroId");

                    b.HasIndex("JornadaId");

                    b.HasIndex("ParteCuerpoId");

                    b.HasIndex("ProcesoId");

                    b.HasIndex("RiesgoId");

                    b.HasIndex("TurnoId");

                    b.ToTable("Incidentes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActividadId = 1,
                            AreaId = 1,
                            CausaBasicaId = 2,
                            CausaInmediataId = 2,
                            ClasificacionId = 1,
                            Descripcion = "Descripción del incidente",
                            EfectoId = 2,
                            Fecha = new DateTime(2020, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroId = 1,
                            JornadaId = 1,
                            Observado = "Alejandro Venegas",
                            ParteCuerpoId = 11,
                            ProcesoId = 23,
                            RiesgoId = 1,
                            TurnoId = 2
                        },
                        new
                        {
                            Id = 2,
                            ActividadId = 2,
                            AreaId = 11,
                            CausaBasicaId = 1,
                            CausaInmediataId = 2,
                            ClasificacionId = 5,
                            Descripcion = "Descripción del incidente",
                            EfectoId = 2,
                            Fecha = new DateTime(2020, 1, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroId = 2,
                            JornadaId = 2,
                            Observado = "Alejandro Venegas",
                            ParteCuerpoId = 3,
                            ProcesoId = 4,
                            RiesgoId = 2,
                            TurnoId = 1
                        },
                        new
                        {
                            Id = 3,
                            ActividadId = 1,
                            AreaId = 26,
                            CausaBasicaId = 4,
                            CausaInmediataId = 5,
                            ClasificacionId = 3,
                            Descripcion = "Descripción del incidente",
                            EfectoId = 2,
                            Fecha = new DateTime(2020, 2, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroId = 1,
                            JornadaId = 2,
                            Observado = "Alejandro Venegas",
                            ParteCuerpoId = 3,
                            ProcesoId = 18,
                            RiesgoId = 3,
                            TurnoId = 4
                        },
                        new
                        {
                            Id = 4,
                            ActividadId = 1,
                            AreaId = 36,
                            CausaBasicaId = 3,
                            CausaInmediataId = 6,
                            ClasificacionId = 7,
                            Descripcion = "Descripción del incidente",
                            EfectoId = 2,
                            Fecha = new DateTime(2020, 2, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroId = 1,
                            JornadaId = 3,
                            Observado = "Alejandro Venegas",
                            ParteCuerpoId = 7,
                            ProcesoId = 22,
                            RiesgoId = 2,
                            TurnoId = 4
                        },
                        new
                        {
                            Id = 5,
                            ActividadId = 1,
                            AreaId = 49,
                            CausaBasicaId = 5,
                            CausaInmediataId = 8,
                            ClasificacionId = 3,
                            Descripcion = "Descripción del incidente",
                            EfectoId = 2,
                            Fecha = new DateTime(2020, 3, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroId = 1,
                            JornadaId = 2,
                            Observado = "Alejandro Venegas",
                            ParteCuerpoId = 4,
                            ProcesoId = 19,
                            RiesgoId = 1,
                            TurnoId = 3
                        },
                        new
                        {
                            Id = 6,
                            ActividadId = 1,
                            AreaId = 21,
                            CausaBasicaId = 1,
                            CausaInmediataId = 15,
                            ClasificacionId = 5,
                            Descripcion = "Descripción del incidente",
                            EfectoId = 2,
                            Fecha = new DateTime(2020, 3, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroId = 1,
                            JornadaId = 1,
                            Observado = "Alejandro Venegas",
                            ParteCuerpoId = 7,
                            ProcesoId = 20,
                            RiesgoId = 2,
                            TurnoId = 3
                        },
                        new
                        {
                            Id = 7,
                            ActividadId = 1,
                            AreaId = 48,
                            CausaBasicaId = 2,
                            CausaInmediataId = 6,
                            ClasificacionId = 8,
                            Descripcion = "Descripción del incidente",
                            EfectoId = 2,
                            Fecha = new DateTime(2020, 4, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroId = 2,
                            JornadaId = 2,
                            Observado = "Alejandro Venegas",
                            ParteCuerpoId = 14,
                            ProcesoId = 4,
                            RiesgoId = 3,
                            TurnoId = 5
                        },
                        new
                        {
                            Id = 8,
                            ActividadId = 2,
                            AreaId = 12,
                            CausaBasicaId = 3,
                            CausaInmediataId = 16,
                            ClasificacionId = 9,
                            Descripcion = "Descripción del incidente",
                            EfectoId = 1,
                            Fecha = new DateTime(2020, 4, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroId = 1,
                            JornadaId = 2,
                            Observado = "Alejandro Venegas",
                            ParteCuerpoId = 35,
                            ProcesoId = 5,
                            RiesgoId = 1,
                            TurnoId = 1
                        },
                        new
                        {
                            Id = 9,
                            ActividadId = 1,
                            AreaId = 50,
                            CausaBasicaId = 5,
                            CausaInmediataId = 4,
                            ClasificacionId = 10,
                            Descripcion = "Descripción del incidente",
                            EfectoId = 2,
                            Fecha = new DateTime(2020, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroId = 1,
                            JornadaId = 1,
                            Observado = "Alejandro Venegas",
                            ParteCuerpoId = 22,
                            ProcesoId = 1,
                            RiesgoId = 2,
                            TurnoId = 2
                        },
                        new
                        {
                            Id = 10,
                            ActividadId = 1,
                            AreaId = 16,
                            CausaBasicaId = 2,
                            CausaInmediataId = 12,
                            ClasificacionId = 11,
                            Descripcion = "Descripción del incidente",
                            EfectoId = 2,
                            Fecha = new DateTime(2020, 5, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroId = 2,
                            JornadaId = 1,
                            Observado = "Alejandro Venegas",
                            ParteCuerpoId = 31,
                            ProcesoId = 4,
                            RiesgoId = 3,
                            TurnoId = 4
                        },
                        new
                        {
                            Id = 11,
                            ActividadId = 2,
                            AreaId = 23,
                            CausaBasicaId = 3,
                            CausaInmediataId = 22,
                            ClasificacionId = 2,
                            Descripcion = "Descripción del incidente",
                            EfectoId = 1,
                            Fecha = new DateTime(2020, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroId = 2,
                            JornadaId = 2,
                            Observado = "Alejandro Venegas",
                            ParteCuerpoId = 20,
                            ProcesoId = 6,
                            RiesgoId = 2,
                            TurnoId = 2
                        },
                        new
                        {
                            Id = 12,
                            ActividadId = 1,
                            AreaId = 41,
                            CausaBasicaId = 5,
                            CausaInmediataId = 20,
                            ClasificacionId = 4,
                            Descripcion = "Descripción del incidente",
                            EfectoId = 1,
                            Fecha = new DateTime(2020, 6, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroId = 1,
                            JornadaId = 3,
                            Observado = "Alejandro Venegas",
                            ParteCuerpoId = 19,
                            ProcesoId = 16,
                            RiesgoId = 2,
                            TurnoId = 2
                        },
                        new
                        {
                            Id = 13,
                            ActividadId = 1,
                            AreaId = 33,
                            CausaBasicaId = 3,
                            CausaInmediataId = 15,
                            ClasificacionId = 11,
                            Descripcion = "Descripción del incidente",
                            EfectoId = 2,
                            Fecha = new DateTime(2020, 6, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroId = 1,
                            JornadaId = 3,
                            Observado = "Alejandro Venegas",
                            ParteCuerpoId = 15,
                            ProcesoId = 19,
                            RiesgoId = 1,
                            TurnoId = 4
                        },
                        new
                        {
                            Id = 14,
                            ActividadId = 1,
                            AreaId = 45,
                            CausaBasicaId = 2,
                            CausaInmediataId = 21,
                            ClasificacionId = 6,
                            Descripcion = "Descripción del incidente",
                            EfectoId = 2,
                            Fecha = new DateTime(2020, 7, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroId = 2,
                            JornadaId = 2,
                            Observado = "Alejandro Venegas",
                            ParteCuerpoId = 13,
                            ProcesoId = 23,
                            RiesgoId = 2,
                            TurnoId = 4
                        },
                        new
                        {
                            Id = 15,
                            ActividadId = 2,
                            AreaId = 4,
                            CausaBasicaId = 1,
                            CausaInmediataId = 20,
                            ClasificacionId = 5,
                            Descripcion = "Descripción del incidente",
                            EfectoId = 1,
                            Fecha = new DateTime(2020, 7, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneroId = 1,
                            JornadaId = 1,
                            Observado = "Alejandro Venegas",
                            ParteCuerpoId = 12,
                            ProcesoId = 22,
                            RiesgoId = 3,
                            TurnoId = 2
                        });
                });

            modelBuilder.Entity("bbs.Models.IndicadorRiesgo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(75)");

                    b.HasKey("Id");

                    b.ToTable("IndicadorRiesgos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Físicos"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Químicos"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Biológicos"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Ergonómicos"
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "Mecánicos"
                        },
                        new
                        {
                            Id = 6,
                            Nombre = "Infraestructura y Entorno"
                        });
                });

            modelBuilder.Entity("bbs.Models.Jornada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(75)");

                    b.HasKey("Id");

                    b.ToTable("Jornadas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "25% < J < 100%"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "50% < J < 100%"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "75% < J < 100%"
                        });
                });

            modelBuilder.Entity("bbs.Models.Observado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(75)");

                    b.HasKey("Id");

                    b.ToTable("Observados");
                });

            modelBuilder.Entity("bbs.Models.ParteCuerpo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(75)");

                    b.HasKey("Id");

                    b.ToTable("ParteCuerpos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Antebrazo Derecho"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Antebrazo Izquierdo"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Brazo Derecho"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Brazo Izquierdo"
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "Codo Derecho"
                        },
                        new
                        {
                            Id = 6,
                            Nombre = "Codo Izquierdo"
                        },
                        new
                        {
                            Id = 7,
                            Nombre = "Dedos de la Mano Derecha"
                        },
                        new
                        {
                            Id = 8,
                            Nombre = "Dedos de la Mano Izquierda"
                        },
                        new
                        {
                            Id = 9,
                            Nombre = "Espalda"
                        },
                        new
                        {
                            Id = 10,
                            Nombre = "Hombro Derecho"
                        },
                        new
                        {
                            Id = 11,
                            Nombre = "Hombro Izquierdo"
                        },
                        new
                        {
                            Id = 12,
                            Nombre = "Mano Derecha"
                        },
                        new
                        {
                            Id = 13,
                            Nombre = "Mano Izquierda"
                        },
                        new
                        {
                            Id = 14,
                            Nombre = "Pie Derecho"
                        },
                        new
                        {
                            Id = 15,
                            Nombre = "Pie Izquierdo"
                        },
                        new
                        {
                            Id = 16,
                            Nombre = "Pierna Izquierda"
                        },
                        new
                        {
                            Id = 17,
                            Nombre = "Pierda Derecha"
                        },
                        new
                        {
                            Id = 18,
                            Nombre = "Rodilla Derecha"
                        },
                        new
                        {
                            Id = 19,
                            Nombre = "Rodilla Izquierda"
                        },
                        new
                        {
                            Id = 20,
                            Nombre = "Tórax"
                        },
                        new
                        {
                            Id = 21,
                            Nombre = "Cabeza"
                        },
                        new
                        {
                            Id = 22,
                            Nombre = "Ojo Derecho"
                        },
                        new
                        {
                            Id = 23,
                            Nombre = "Ojo Izquierda"
                        },
                        new
                        {
                            Id = 24,
                            Nombre = "Cara"
                        },
                        new
                        {
                            Id = 25,
                            Nombre = "Nariz"
                        },
                        new
                        {
                            Id = 26,
                            Nombre = "Glúteo Derecho"
                        },
                        new
                        {
                            Id = 27,
                            Nombre = "Glúteo Izquierdo"
                        },
                        new
                        {
                            Id = 28,
                            Nombre = "Oreja Izquierda"
                        },
                        new
                        {
                            Id = 29,
                            Nombre = "Oreja Derecha"
                        },
                        new
                        {
                            Id = 30,
                            Nombre = "Ceja Izquierda"
                        },
                        new
                        {
                            Id = 31,
                            Nombre = "Ceja Derecha"
                        },
                        new
                        {
                            Id = 32,
                            Nombre = "Tobillo Derecho"
                        },
                        new
                        {
                            Id = 33,
                            Nombre = "Tobillo Izquierdo"
                        },
                        new
                        {
                            Id = 34,
                            Nombre = "Dentadura"
                        },
                        new
                        {
                            Id = 35,
                            Nombre = "Politraumatismo"
                        });
                });

            modelBuilder.Entity("bbs.Models.Proceso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(75)");

                    b.HasKey("Id");

                    b.ToTable("Procesos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Agrícola"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Calidad"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Comercial"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Contratistas"
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "Exportaciones"
                        },
                        new
                        {
                            Id = 6,
                            Nombre = "Finanzas & Costos"
                        },
                        new
                        {
                            Id = 7,
                            Nombre = "Gerencia"
                        },
                        new
                        {
                            Id = 8,
                            Nombre = "GIS"
                        },
                        new
                        {
                            Id = 9,
                            Nombre = "I&D"
                        },
                        new
                        {
                            Id = 10,
                            Nombre = "IP"
                        },
                        new
                        {
                            Id = 11,
                            Nombre = "Maduradora"
                        },
                        new
                        {
                            Id = 12,
                            Nombre = "Ingeniería"
                        },
                        new
                        {
                            Id = 13,
                            Nombre = "Planning"
                        },
                        new
                        {
                            Id = 14,
                            Nombre = "Producción"
                        },
                        new
                        {
                            Id = 15,
                            Nombre = "RRHH"
                        },
                        new
                        {
                            Id = 16,
                            Nombre = "SHE"
                        },
                        new
                        {
                            Id = 17,
                            Nombre = "SUPPLY"
                        },
                        new
                        {
                            Id = 18,
                            Nombre = "IT"
                        },
                        new
                        {
                            Id = 19,
                            Nombre = "Compras"
                        },
                        new
                        {
                            Id = 20,
                            Nombre = "Operaciones"
                        },
                        new
                        {
                            Id = 21,
                            Nombre = "Bodega"
                        },
                        new
                        {
                            Id = 22,
                            Nombre = "Manufactura"
                        },
                        new
                        {
                            Id = 23,
                            Nombre = "PTAR"
                        });
                });

            modelBuilder.Entity("bbs.Models.Riesgo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IncidenteId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Riesgos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IncidenteId = 0,
                            Nombre = "Bajo"
                        },
                        new
                        {
                            Id = 2,
                            IncidenteId = 0,
                            Nombre = "Medio"
                        },
                        new
                        {
                            Id = 3,
                            IncidenteId = 0,
                            Nombre = "Alto"
                        });
                });

            modelBuilder.Entity("bbs.Models.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Posee más permisos de edición en los formularios, puede gestionar gráficos y/o reportes de todos los departamentos",
                            Nombre = "Encargado"
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Posee permisos de ingreso, gestión de gráficas y/o reportes, puede ceder al Trabajador el acceso al sistema para el ingreso de los formularios",
                            Nombre = "Gerente"
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Posee permisos para el ingreso de los formularios",
                            Nombre = "Trabajador"
                        });
                });

            modelBuilder.Entity("bbs.Models.RolVista", b =>
                {
                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.Property<byte>("VistaId")
                        .HasColumnType("tinyint");

                    b.Property<bool>("Escritura")
                        .HasColumnType("bit");

                    b.HasKey("RolId", "VistaId");

                    b.HasIndex("VistaId");

                    b.ToTable("RolVistas");

                    b.HasData(
                        new
                        {
                            RolId = 1,
                            VistaId = (byte)1,
                            Escritura = true
                        },
                        new
                        {
                            RolId = 1,
                            VistaId = (byte)2,
                            Escritura = true
                        },
                        new
                        {
                            RolId = 1,
                            VistaId = (byte)3,
                            Escritura = true
                        },
                        new
                        {
                            RolId = 1,
                            VistaId = (byte)4,
                            Escritura = true
                        },
                        new
                        {
                            RolId = 1,
                            VistaId = (byte)5,
                            Escritura = true
                        },
                        new
                        {
                            RolId = 1,
                            VistaId = (byte)6,
                            Escritura = true
                        },
                        new
                        {
                            RolId = 1,
                            VistaId = (byte)7,
                            Escritura = true
                        },
                        new
                        {
                            RolId = 1,
                            VistaId = (byte)8,
                            Escritura = true
                        },
                        new
                        {
                            RolId = 1,
                            VistaId = (byte)9,
                            Escritura = true
                        },
                        new
                        {
                            RolId = 1,
                            VistaId = (byte)10,
                            Escritura = true
                        },
                        new
                        {
                            RolId = 1,
                            VistaId = (byte)11,
                            Escritura = true
                        },
                        new
                        {
                            RolId = 1,
                            VistaId = (byte)12,
                            Escritura = true
                        },
                        new
                        {
                            RolId = 2,
                            VistaId = (byte)1,
                            Escritura = true
                        },
                        new
                        {
                            RolId = 2,
                            VistaId = (byte)2,
                            Escritura = true
                        },
                        new
                        {
                            RolId = 2,
                            VistaId = (byte)3,
                            Escritura = true
                        },
                        new
                        {
                            RolId = 2,
                            VistaId = (byte)4,
                            Escritura = true
                        },
                        new
                        {
                            RolId = 2,
                            VistaId = (byte)5,
                            Escritura = true
                        },
                        new
                        {
                            RolId = 2,
                            VistaId = (byte)6,
                            Escritura = true
                        },
                        new
                        {
                            RolId = 2,
                            VistaId = (byte)8,
                            Escritura = true
                        },
                        new
                        {
                            RolId = 2,
                            VistaId = (byte)9,
                            Escritura = true
                        },
                        new
                        {
                            RolId = 3,
                            VistaId = (byte)1,
                            Escritura = true
                        },
                        new
                        {
                            RolId = 3,
                            VistaId = (byte)2,
                            Escritura = true
                        },
                        new
                        {
                            RolId = 3,
                            VistaId = (byte)3,
                            Escritura = true
                        },
                        new
                        {
                            RolId = 3,
                            VistaId = (byte)4,
                            Escritura = true
                        },
                        new
                        {
                            RolId = 3,
                            VistaId = (byte)5,
                            Escritura = true
                        });
                });

            modelBuilder.Entity("bbs.Models.Subcategoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(75)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Subcategorias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoriaId = 1,
                            Nombre = "Ruido "
                        },
                        new
                        {
                            Id = 2,
                            CategoriaId = 1,
                            Nombre = "Confort térmico "
                        },
                        new
                        {
                            Id = 3,
                            CategoriaId = 1,
                            Nombre = "Iluminación "
                        },
                        new
                        {
                            Id = 4,
                            CategoriaId = 1,
                            Nombre = "Material Particulado "
                        },
                        new
                        {
                            Id = 5,
                            CategoriaId = 1,
                            Nombre = "Vapores orgánicos "
                        },
                        new
                        {
                            Id = 6,
                            CategoriaId = 2,
                            Nombre = "Materiales mal apilados"
                        },
                        new
                        {
                            Id = 7,
                            CategoriaId = 2,
                            Nombre = "Niveles de carga superados"
                        },
                        new
                        {
                            Id = 8,
                            CategoriaId = 2,
                            Nombre = "Muebles de almacenamiento mal ubicados"
                        },
                        new
                        {
                            Id = 9,
                            CategoriaId = 2,
                            Nombre = "Estructura de almacenamiento deteriorada"
                        },
                        new
                        {
                            Id = 10,
                            CategoriaId = 3,
                            Nombre = "Extintores obstruidos"
                        },
                        new
                        {
                            Id = 11,
                            CategoriaId = 3,
                            Nombre = "Extintores descargados"
                        },
                        new
                        {
                            Id = 12,
                            CategoriaId = 3,
                            Nombre = "Botiquines obstruidos"
                        },
                        new
                        {
                            Id = 13,
                            CategoriaId = 3,
                            Nombre = "Botiquines dañados"
                        },
                        new
                        {
                            Id = 14,
                            CategoriaId = 3,
                            Nombre = "Estaciones de mangueras con fallo"
                        },
                        new
                        {
                            Id = 15,
                            CategoriaId = 3,
                            Nombre = "PIV con fallo"
                        },
                        new
                        {
                            Id = 16,
                            CategoriaId = 4,
                            Nombre = "Casco dañado o alterado"
                        },
                        new
                        {
                            Id = 17,
                            CategoriaId = 4,
                            Nombre = "Lentes dañado o alterado"
                        },
                        new
                        {
                            Id = 18,
                            CategoriaId = 4,
                            Nombre = "Calzado dañado o alterado"
                        },
                        new
                        {
                            Id = 19,
                            CategoriaId = 4,
                            Nombre = "Equipo especial o alterado"
                        },
                        new
                        {
                            Id = 20,
                            CategoriaId = 4,
                            Nombre = "Protección de manos dañado o alterado"
                        },
                        new
                        {
                            Id = 21,
                            CategoriaId = 4,
                            Nombre = "Protección de oido dañado o alterado"
                        },
                        new
                        {
                            Id = 22,
                            CategoriaId = 5,
                            Nombre = "Manejo de cargas"
                        },
                        new
                        {
                            Id = 23,
                            CategoriaId = 5,
                            Nombre = "Estación de trabajo"
                        },
                        new
                        {
                            Id = 24,
                            CategoriaId = 5,
                            Nombre = "Posturas estáticas"
                        },
                        new
                        {
                            Id = 25,
                            CategoriaId = 5,
                            Nombre = "Movimientos repetitivos"
                        },
                        new
                        {
                            Id = 26,
                            CategoriaId = 6,
                            Nombre = "Herramienta no certificada CE, UL"
                        },
                        new
                        {
                            Id = 27,
                            CategoriaId = 6,
                            Nombre = "Herramienta con daño o alteraciones"
                        },
                        new
                        {
                            Id = 28,
                            CategoriaId = 7,
                            Nombre = "Herramienta con daño o alteraciones"
                        },
                        new
                        {
                            Id = 29,
                            CategoriaId = 8,
                            Nombre = "Fallo en tubería de facilidades"
                        },
                        new
                        {
                            Id = 30,
                            CategoriaId = 8,
                            Nombre = "Paredes dañadas"
                        },
                        new
                        {
                            Id = 31,
                            CategoriaId = 8,
                            Nombre = "Techos deteriorados"
                        },
                        new
                        {
                            Id = 32,
                            CategoriaId = 8,
                            Nombre = "Instalaciones eléctricas deterioradas"
                        },
                        new
                        {
                            Id = 33,
                            CategoriaId = 8,
                            Nombre = "Pisos dañados"
                        },
                        new
                        {
                            Id = 34,
                            CategoriaId = 8,
                            Nombre = "Calles deteriorada"
                        },
                        new
                        {
                            Id = 35,
                            CategoriaId = 8,
                            Nombre = "Puertas deterioradas"
                        },
                        new
                        {
                            Id = 36,
                            CategoriaId = 8,
                            Nombre = "Pisos resbalosos"
                        },
                        new
                        {
                            Id = 37,
                            CategoriaId = 9,
                            Nombre = "Pisos resbalosos"
                        },
                        new
                        {
                            Id = 38,
                            CategoriaId = 9,
                            Nombre = "Obstrucción de zonas de paso"
                        },
                        new
                        {
                            Id = 39,
                            CategoriaId = 9,
                            Nombre = "Obstrucción de zonas de emergencia"
                        },
                        new
                        {
                            Id = 40,
                            CategoriaId = 9,
                            Nombre = "Pisos húmedos"
                        },
                        new
                        {
                            Id = 41,
                            CategoriaId = 9,
                            Nombre = "Almacenamiento inadecuado de herramientas de trabajo"
                        },
                        new
                        {
                            Id = 42,
                            CategoriaId = 10,
                            Nombre = "Almacenamiento incompatible"
                        },
                        new
                        {
                            Id = 43,
                            CategoriaId = 10,
                            Nombre = "Producto quimico sin etiqueta de riesgo"
                        },
                        new
                        {
                            Id = 44,
                            CategoriaId = 10,
                            Nombre = "Ausencia de kit de atención derrames"
                        },
                        new
                        {
                            Id = 45,
                            CategoriaId = 10,
                            Nombre = "Ausencia de tarima de conteción"
                        },
                        new
                        {
                            Id = 46,
                            CategoriaId = 11,
                            Nombre = "Ausencia de resguardos"
                        },
                        new
                        {
                            Id = 47,
                            CategoriaId = 11,
                            Nombre = "Resguardos en malas condiciones"
                        },
                        new
                        {
                            Id = 48,
                            CategoriaId = 11,
                            Nombre = "Interlock alterados"
                        },
                        new
                        {
                            Id = 49,
                            CategoriaId = 11,
                            Nombre = "Diseño de resguardo con deficiencias"
                        },
                        new
                        {
                            Id = 50,
                            CategoriaId = 11,
                            Nombre = "Instalaciones eléctricas de máquina deficientes"
                        },
                        new
                        {
                            Id = 51,
                            CategoriaId = 12,
                            Nombre = "Ausencia de rotulación"
                        },
                        new
                        {
                            Id = 52,
                            CategoriaId = 12,
                            Nombre = "Señalización horinzontal deteriorada"
                        },
                        new
                        {
                            Id = 53,
                            CategoriaId = 12,
                            Nombre = "Rotulación alterada"
                        },
                        new
                        {
                            Id = 54,
                            CategoriaId = 12,
                            Nombre = "Rotulación deteriorada"
                        });
                });

            modelBuilder.Entity("bbs.Models.TipoComportamiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(75)");

                    b.HasKey("Id");

                    b.ToTable("TipoComportamientos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Seguro"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Inseguro"
                        });
                });

            modelBuilder.Entity("bbs.Models.TipoObservado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(75)");

                    b.HasKey("Id");

                    b.ToTable("TipoObservados");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Paradise Ingredients"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Visitantes"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Contratistas"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Transportistas"
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "Tercerizado"
                        });
                });

            modelBuilder.Entity("bbs.Models.Turno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(75)");

                    b.HasKey("Id");

                    b.ToTable("Turnos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "1"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "2"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "3"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Administrativo"
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "Jornadas especiales"
                        });
                });

            modelBuilder.Entity("bbs.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ColaboradorId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ColaboradorId")
                        .IsUnique();

                    b.HasIndex("RolId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("bbs.Models.Value", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Values");
                });

            modelBuilder.Entity("bbs.Models.Vista", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("tinyint");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(75)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Vistas");

                    b.HasData(
                        new
                        {
                            Id = (byte)1,
                            Nombre = "Reportes",
                            Url = "/reportes/lista"
                        },
                        new
                        {
                            Id = (byte)2,
                            Nombre = "Incidente",
                            Url = "/reportes/incidente"
                        },
                        new
                        {
                            Id = (byte)3,
                            Nombre = "Casi Incidente",
                            Url = "/reportes/casi-incidente"
                        },
                        new
                        {
                            Id = (byte)4,
                            Nombre = "BBS",
                            Url = "/reportes/bbs"
                        },
                        new
                        {
                            Id = (byte)5,
                            Nombre = "Condiciones Inseguras",
                            Url = "/reportes/condiciones-inseguras"
                        },
                        new
                        {
                            Id = (byte)6,
                            Nombre = "Gráficos",
                            Url = "/graficos"
                        },
                        new
                        {
                            Id = (byte)7,
                            Nombre = "Roles",
                            Url = "/administrar/roles"
                        },
                        new
                        {
                            Id = (byte)8,
                            Nombre = "Perfiles",
                            Url = "/administrar/perfiles"
                        },
                        new
                        {
                            Id = (byte)9,
                            Nombre = "Colaboradores",
                            Url = "/administrar/colaboradores"
                        },
                        new
                        {
                            Id = (byte)10,
                            Nombre = "Departamentos",
                            Url = "/administrar/departamentos"
                        },
                        new
                        {
                            Id = (byte)11,
                            Nombre = "Formularios",
                            Url = "/mantenimiento/formularios"
                        },
                        new
                        {
                            Id = (byte)12,
                            Nombre = "Bitácora",
                            Url = "/mantenimiento/bitacora"
                        });
                });

            modelBuilder.Entity("bbs.Models.Bbs", b =>
                {
                    b.HasOne("bbs.Models.Area", "Area")
                        .WithMany("Bbss")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bbs.Models.Comportamiento", "Comportamiento")
                        .WithMany("Bbss")
                        .HasForeignKey("ComportamientoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bbs.Models.Colaborador", "Observador")
                        .WithMany("Bbss")
                        .HasForeignKey("ObservadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bbs.Models.Proceso", "Proceso")
                        .WithMany("Bbss")
                        .HasForeignKey("ProcesoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bbs.Models.TipoComportamiento", "TipoComportamiento")
                        .WithMany("Bbss")
                        .HasForeignKey("TipoComportamientoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bbs.Models.TipoObservado", "TipoObservado")
                        .WithMany("Bbss")
                        .HasForeignKey("TipoObservadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("bbs.Models.Bitacora", b =>
                {
                    b.HasOne("bbs.Models.Usuario", "Usuario")
                        .WithMany("Bitacoras")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("bbs.Models.CasiIncidente", b =>
                {
                    b.HasOne("bbs.Models.Area", "Area")
                        .WithMany("CasiIncidentes")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bbs.Models.Casualidad", "Casualidad")
                        .WithMany("CasiIncidentes")
                        .HasForeignKey("CasualidadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bbs.Models.Colaborador", null)
                        .WithMany("CasiIncidentes")
                        .HasForeignKey("ColaboradorId");

                    b.HasOne("bbs.Models.Genero", "Genero")
                        .WithMany("CasiIncidentes")
                        .HasForeignKey("GeneroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bbs.Models.Jornada", "Jornada")
                        .WithMany("CasiIncidentes")
                        .HasForeignKey("JornadaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bbs.Models.Proceso", "Proceso")
                        .WithMany("CasiIncidentes")
                        .HasForeignKey("ProcesoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bbs.Models.Riesgo", "Riesgo")
                        .WithMany("CasiIncidentes")
                        .HasForeignKey("RiesgoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bbs.Models.Turno", "Turno")
                        .WithMany("CasiIncidentes")
                        .HasForeignKey("TurnoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("bbs.Models.Colaborador", b =>
                {
                    b.HasOne("bbs.Models.Departamento", "Departamento")
                        .WithMany("Colaboradores")
                        .HasForeignKey("DepartamentoId")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("bbs.Models.CondicionInsegura", b =>
                {
                    b.HasOne("bbs.Models.Area", "Area")
                        .WithMany("CondicionInseguras")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bbs.Models.Categoria", "Categoria")
                        .WithMany("CondicionInseguras")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bbs.Models.Colaborador", "Colaborador")
                        .WithMany("CondicionInseguras")
                        .HasForeignKey("ColaboradorId");

                    b.HasOne("bbs.Models.Subcategoria", "Subcategoria")
                        .WithMany("CondicionInseguras")
                        .HasForeignKey("SubcategoriaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("bbs.Models.Departamento", b =>
                {
                    b.HasOne("bbs.Models.Colaborador", "Gerente")
                        .WithMany()
                        .HasForeignKey("GerenteId")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("bbs.Models.Incidente", b =>
                {
                    b.HasOne("bbs.Models.Actividad", "Actividad")
                        .WithMany("Incidentes")
                        .HasForeignKey("ActividadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bbs.Models.Area", "Area")
                        .WithMany("Incidentes")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bbs.Models.CausaBasica", "CausaBasica")
                        .WithMany("Incidentes")
                        .HasForeignKey("CausaBasicaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bbs.Models.CausaInmediata", "CausaInmediata")
                        .WithMany("Incidentes")
                        .HasForeignKey("CausaInmediataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bbs.Models.Clasificacion", "Clasificacion")
                        .WithMany("Incidentes")
                        .HasForeignKey("ClasificacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bbs.Models.Colaborador", null)
                        .WithMany("Incidentes")
                        .HasForeignKey("ColaboradorId");

                    b.HasOne("bbs.Models.Efecto", "Efecto")
                        .WithMany("Incidentes")
                        .HasForeignKey("EfectoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bbs.Models.Genero", "Genero")
                        .WithMany("Incidentes")
                        .HasForeignKey("GeneroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bbs.Models.Jornada", "Jornada")
                        .WithMany("Incidentes")
                        .HasForeignKey("JornadaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bbs.Models.ParteCuerpo", "ParteCuerpo")
                        .WithMany("Incidentes")
                        .HasForeignKey("ParteCuerpoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bbs.Models.Proceso", "Proceso")
                        .WithMany("Incidentes")
                        .HasForeignKey("ProcesoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bbs.Models.Riesgo", "Riesgo")
                        .WithMany("Incidentes")
                        .HasForeignKey("RiesgoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bbs.Models.Turno", "Turno")
                        .WithMany("Incidentes")
                        .HasForeignKey("TurnoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("bbs.Models.RolVista", b =>
                {
                    b.HasOne("bbs.Models.Rol", "Rol")
                        .WithMany("RolVistas")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bbs.Models.Vista", "Vista")
                        .WithMany("RolVistas")
                        .HasForeignKey("VistaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("bbs.Models.Subcategoria", b =>
                {
                    b.HasOne("bbs.Models.Categoria", "Categoria")
                        .WithMany("Subcategorias")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("bbs.Models.Usuario", b =>
                {
                    b.HasOne("bbs.Models.Colaborador", "Colaborador")
                        .WithOne("Usuario")
                        .HasForeignKey("bbs.Models.Usuario", "ColaboradorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bbs.Models.Rol", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
